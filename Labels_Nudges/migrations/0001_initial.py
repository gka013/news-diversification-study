# Generated by Django 3.2.6 on 2022-05-23 15:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HealthyRecipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('URL', models.CharField(max_length=300)),
                ('Name', models.CharField(max_length=500)),
                ('fiber_g', models.CharField(max_length=50)),
                ('sodium_g', models.CharField(max_length=50)),
                ('carbohydrates_g', models.CharField(max_length=50)),
                ('fat_g', models.CharField(max_length=50)),
                ('protein_g', models.CharField(max_length=50)),
                ('sugar_g', models.CharField(max_length=50)),
                ('saturate_g', models.CharField(max_length=50)),
                ('size_g', models.CharField(max_length=50)),
                ('Servings', models.CharField(max_length=50)),
                ('calories_kCal', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=50)),
                ('image_link', models.CharField(max_length=500)),
                ('fat_100g', models.CharField(max_length=50)),
                ('fiber_100g', models.CharField(max_length=50)),
                ('sugar_100g', models.CharField(max_length=50)),
                ('saturated_100g', models.CharField(max_length=50)),
                ('protien_100g', models.CharField(max_length=50)),
                ('sodium_100mg', models.CharField(max_length=50)),
                ('carbohydrates_100g', models.CharField(max_length=50)),
                ('kj_100g', models.CharField(max_length=50)),
                ('Nutri_score', models.CharField(max_length=50)),
                ('Fsa_new', models.CharField(max_length=50)),
                ('salt_100g', models.CharField(max_length=50)),
                ('salt_g', models.CharField(max_length=50)),
                ('fat_count', models.CharField(max_length=50)),
                ('satfat_count', models.CharField(max_length=50)),
                ('sugar_count', models.CharField(max_length=50)),
                ('salt_count', models.CharField(max_length=50)),
                ('NumberRatings', models.IntegerField()),
            ],
            options={
                'verbose_name': 'HealthyRecipe',
                'db_table': 'HealthyRecipe',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Personal_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='Personal_info', editable=False, max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('age', models.CharField(choices=[(None, ''), ('under_18', 'Under 18'), ('b18_24', '18-24'), ('b25_35', '25-35'), ('b35_45', '35-45'), ('b45_55', '45-55'), ('bover_55', 'Over 55')], default=None, max_length=120, verbose_name='age')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('education', models.CharField(choices=[(None, ''), ('Less_high_school', 'Less than high school'), ('High_school', 'High school or equivalent'), ('BA', 'Bachelor degree (e.g. BA, BSc)'), ('MSc', 'Master degree (e.g. MA, MSc)'), ('Doctorate', 'Doctorate (e.g. PhD)'), ('Not', 'Prefer not to say')], default=None, max_length=120, verbose_name='education')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('refuse_to_disc', 'Other / Prefer not to say')], default=None, max_length=300, verbose_name='gender')),
                ('session_id', models.CharField(default=None, max_length=100)),
            ],
            options={
                'verbose_name': 'personal_info',
                'db_table': 'personal_info',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UnhealthyRecipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('URL', models.CharField(max_length=300)),
                ('Name', models.CharField(max_length=500)),
                ('fiber_g', models.CharField(max_length=50)),
                ('sodium_g', models.CharField(max_length=50)),
                ('carbohydrates_g', models.CharField(max_length=50)),
                ('fat_g', models.CharField(max_length=50)),
                ('protein_g', models.CharField(max_length=50)),
                ('sugar_g', models.CharField(max_length=50)),
                ('saturate_g', models.CharField(max_length=50)),
                ('size_g', models.CharField(max_length=50)),
                ('Servings', models.CharField(max_length=50)),
                ('calories_kCal', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=50)),
                ('image_link', models.CharField(max_length=500)),
                ('fat_100g', models.CharField(max_length=50)),
                ('fiber_100g', models.CharField(max_length=50)),
                ('sugar_100g', models.CharField(max_length=50)),
                ('saturated_100g', models.CharField(max_length=50)),
                ('protien_100g', models.CharField(max_length=50)),
                ('sodium_100mg', models.CharField(max_length=50)),
                ('carbohydrates_100g', models.CharField(max_length=50)),
                ('kj_100g', models.CharField(max_length=50)),
                ('Nutri_score', models.CharField(max_length=50)),
                ('Fsa_new', models.CharField(max_length=50)),
                ('salt_100g', models.CharField(max_length=50)),
                ('salt_g', models.CharField(max_length=50)),
                ('fat_count', models.CharField(max_length=50)),
                ('satfat_count', models.CharField(max_length=50)),
                ('sugar_count', models.CharField(max_length=50)),
                ('salt_count', models.CharField(max_length=50)),
                ('NumberRatings', models.IntegerField()),
            ],
            options={
                'verbose_name': 'UnhealthyRecipe',
                'db_table': 'UnhealthyRecipe',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Recommendations',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('recommended_recipes', models.CharField(max_length=500)),
                ('healthiness', models.CharField(max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Labels_Nudges.personal_info')),
            ],
        ),
        migrations.CreateModel(
            name='Ghs_fk',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('FK_1', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_1')),
                ('FK_2', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_2')),
                ('FK_3', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_3')),
                ('FK_4', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_4')),
                ('FK_5', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_5')),
                ('FK_6', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_6')),
                ('FK_7', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_7')),
                ('FK_8', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_8')),
                ('FK_9', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_9')),
                ('FK_10', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_10')),
                ('FK_11', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_11')),
                ('FK_12', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=300, verbose_name='FK_12')),
                ('session_id', models.CharField(default=None, max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Labels_Nudges.personal_info')),
            ],
            options={
                'verbose_name': 'Ghs_fk',
                'db_table': 'ghs_fk',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[(None, ''), ('Fruits and Vegetables', 'Fruits and Vegetables'), ('Meat and Poultry', 'Meat and Poultry'), ('Barbecue', 'Barbecue'), ('Seafood Pasta and Noodles', 'Seafood Pasta and Noodles')], default=None, max_length=50, verbose_name='Category')),
                ('recipe_popularity', models.CharField(default=None, max_length=50, verbose_name='recipe_popularity')),
                ('calories', models.IntegerField(validators=[django.core.validators.MinValueValidator(200), django.core.validators.MaxValueValidator(1000)])),
                ('recipe_size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('preparation_time', models.IntegerField(validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(60)])),
                ('n_ingredient', models.IntegerField(validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(10)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(default=None, max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Labels_Nudges.personal_info')),
            ],
            options={
                'verbose_name': 'FoodCategory',
                'db_table': 'FoodCategory',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='EvaluateChoices',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='EvaluateChoices', editable=False, max_length=50)),
                ('liked_recipes', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='liked_recipes')),
                ('prepare_recipes', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='prepare_recipes')),
                ('fit_preference', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='fit_preference')),
                ('know_many', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='know_many')),
                ('recommend_recipe', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='recommend_recipe')),
                ('many_to_choose', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='many_to_choose')),
                ('easy_choice', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='easy_choice')),
                ('choice_overwhelming', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='choice_overwhelming')),
                ('sys_time', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='sys_time')),
                ('unders_sys', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='unders_sys')),
                ('many_actions', models.CharField(choices=[('Strongly_Disagree', 'Strongly Disagree'), ('Disagree', 'Disagree'), ('Neutral', 'Neutral'), ('Agree', 'Agree'), ('Strongly_Agree', 'Strongly Agree')], default=None, max_length=100, verbose_name='many_actions')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(default=None, max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Labels_Nudges.personal_info')),
            ],
            options={
                'verbose_name': 'EvaluateChoices',
                'db_table': 'EvaluateChoices',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SelectedRecipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('recipe_id', models.IntegerField()),
                ('recipe_name', models.CharField(max_length=200)),
                ('Nutri_score', models.CharField(max_length=100)),
                ('fsa_score', models.CharField(max_length=100)),
                ('healthiness', models.CharField(max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(default=None, max_length=100)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Labels_Nudges.personal_info')),
            ],
            options={
                'verbose_name': 'selectedRecipe',
                'db_table': 'selectedrecipe',
                'unique_together': {('person', 'recipe_id')},
            },
        ),
    ]
